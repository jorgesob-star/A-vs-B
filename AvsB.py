import streamlit as st
import matplotlib.pyplot as plt

# --- Configura√ß√£o da p√°gina ---
st.set_page_config(page_title="Comparador de Descontos", layout="centered")
st.title("üí∏ Comparador de Descontos")

# --- Valores padr√£o ---
DEFAULTS = {
    'aluguer': 280.0,
    'perc_aluguer': 7.0,
    'seguro': 45.0,
    'perc_seguro': 12.0,
    'manutencao': 20.0
}

# Inicializa valores no estado da sess√£o
for key, value in DEFAULTS.items():
    if key not in st.session_state:
        st.session_state[key] = value

# --- Entradas do usu√°rio ---
st.header("Entradas do Usu√°rio")
apuro = st.number_input("üí∞ Apuro total (‚Ç¨)", min_value=0.0, value=800.0, step=10.0)
desc_combustivel = st.number_input("‚õΩ Desconto de Combust√≠vel (‚Ç¨)", min_value=0.0, value=200.0, step=1.0)

apuro_liquido = apuro - desc_combustivel

st.markdown("---")

# --- Op√ß√µes da empresa com expander ---
st.header("Op√ß√µes da Empresa")
with st.expander("Modificar Op√ß√µes Padr√£o"):
    col1, col2 = st.columns(2)
    with col1:
        st.subheader("Op√ß√£o 1")
        st.number_input("üè† Aluguer (‚Ç¨)", min_value=0.0, value=st.session_state.aluguer, step=1.0, key='aluguer')
        st.number_input("üëî Percentual (%)", min_value=0.0, value=st.session_state.perc_aluguer, step=0.5, key='perc_aluguer')
    with col2:
        st.subheader("Op√ß√£o 2")
        st.number_input("üõ°Ô∏è Seguro (‚Ç¨)", min_value=0.0, value=st.session_state.seguro, step=1.0, key='seguro')
        st.number_input("üëî Percentual (%)", min_value=0.0, value=st.session_state.perc_seguro, step=0.5, key='perc_seguro')
        st.number_input("üõ†Ô∏è Manuten√ß√£o (‚Ç¨)", min_value=0.0, value=st.session_state.manutencao, step=1.0, key='manutencao')

st.markdown("---")

# --- Fun√ß√£o de c√°lculo ---
def calcular_sobra(apuro_liquido, percentual, fixo, manutencao=0):
    return apuro_liquido - (apuro * percentual / 100) - fixo - manutencao

# --- Bot√£o de c√°lculo ---
if st.button("Calcular üîπ"):
    sobra_opcao1 = calcular_sobra(apuro_liquido, st.session_state.perc_aluguer, st.session_state.aluguer)
    sobra_opcao2 = calcular_sobra(apuro_liquido, st.session_state.perc_seguro, st.session_state.seguro, st.session_state.manutencao)

    # --- Resultados ---
    st.subheader("üìä Resultados")
    col3, col4 = st.columns(2)
    col3.metric("Sobra na Op√ß√£o 1", f"{sobra_opcao1:,.2f} ‚Ç¨")
    col4.metric("Sobra na Op√ß√£o 2", f"{sobra_opcao2:,.2f} ‚Ç¨")
    
    if sobra_opcao1 > sobra_opcao2:
        st.success(f"üéâ A **Op√ß√£o 1** √© a melhor escolha, com diferen√ßa de {(sobra_opcao1 - sobra_opcao2):,.2f} ‚Ç¨.")
    elif sobra_opcao2 > sobra_opcao1:
        st.success(f"üéâ A **Op√ß√£o 2** √© a melhor escolha, com diferen√ßa de {(sobra_opcao2 - sobra_opcao1):,.2f} ‚Ç¨.")
    else:
        st.info("As duas op√ß√µes resultam no mesmo valor.")
    
    st.markdown("---")
    
    # --- Detalhes dos c√°lculos ---
    st.markdown("### Detalhes dos C√°lculos")
    
    st.markdown(f"""
**Op√ß√£o 1:**  
Apuro L√≠quido: {apuro_liquido:,.2f} ‚Ç¨  
Dedu√ß√£o Percentual ({st.session_state.perc_aluguer}%): {(apuro * st.session_state.perc_aluguer / 100):,.2f} ‚Ç¨  
Dedu√ß√£o Aluguer: {st.session_state.aluguer:,.2f} ‚Ç¨  
**Valor Final:** {sobra_opcao1:,.2f} ‚Ç¨
""")
    
    st.markdown(f"""
**Op√ß√£o 2:**  
Apuro L√≠quido: {apuro_liquido:,.2f} ‚Ç¨  
Dedu√ß√£o Percentual ({st.session_state.perc_seguro}%): {(apuro * st.session_state.perc_seguro / 100):,.2f} ‚Ç¨  
Dedu√ß√£o Seguro: {st.session_state.seguro:,.2f} ‚Ç¨  
Dedu√ß√£o Manuten√ß√£o: {st.session_state.manutencao:,.2f} ‚Ç¨  
**Valor Final:** {sobra_opcao2:,.2f} ‚Ç¨
""")

    # --- Gr√°fico comparativo ---
    st.markdown("### üìä Compara√ß√£o Visual")
    fig, ax = plt.subplots(figsize=(6, 4))
    opcoes = ['Op√ß√£o 1', 'Op√ß√£o 2']
    valores = [sobra_opcao1, sobra_opcao2]
    cores = ['#4CAF50', '#2196F3']
    ax.bar(opcoes, valores, color=cores)
    ax.set_ylabel('‚Ç¨ Restantes')
    ax.set_title('Compara√ß√£o entre Op√ß√µes')
    for i, v in enumerate(valores):
        ax.text(i, v + 5, f"{v:,.2f} ‚Ç¨", ha='center', fontweight='bold')
    st.pyplot(fig)
